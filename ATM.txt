#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <windows.h>
#include <conio.h>
#define MAX 6
typedef struct user
{
    long int num;
    char password[7];
    float money;    //余额
	long int year;
	int month;
	int day;
	int deposit; //存款；
	int payee;   //取款
	int transfer_accounts;//上次转账金额
	int last_deposit; //上次存款；
	int last_payee;  // 上次取款
	int H[5];       //日志的记录功能//0上次没进行该功能，1上次进行过

}List;

List L[MAX];
int H[5] = {0} ;   //日志功能 
int j;       //特质某用户信息

int N;       //文档共有多少人
//H[0]查询余额，H[1]修改密码，H[2]存款，H[3]取款，H[4]转账
void Welcome_system()
{
    printf("\t\t\t\t\t   欢迎进入\n");
    printf("\t\t\t\t\tATM终端机系统\n");
	system("color 9");
}
void open_file()// 读取该用户信息
{
	  FILE *fp;
	  int i = 0; // i人数，P第几次信息

	  fp = fopen("C:\\Users\\aming\\123.txt","r");
		while(fscanf(fp,"%ld%s%f",&L[i].num,L[i].password,&L[i].money) != EOF)
		{
		
			fscanf(fp,"%ld%d%d%d%d",&L[i].year,&L[i].month,&L[i].day,&L[i].deposit,&L[i].payee);
			fscanf(fp,"%d%d%0.2f",&L[j].last_deposit,&L[j].last_payee,&L[j].transfer_accounts);

		    fscanf(fp,"%d%d%d%d%d",&L[j].H[0],&L[j].H[1],&L[j].H[2],&L[j].H[3],&L[j].H[4]);
		    fprintf(fp,"\n");
		i++;
        }
	
		N = i;
		
		printf("\a");
     	fclose(fp);
}
int login_system()
{
    int k = 3,m = 0,i = 0,G = 0,j = 0;// k 输入密码次数
    long int num;
	char password[7];
    printf("请输入账号：\n");
    scanf("%ld",&num);
    for(j=0;j<N;j++)   //判断是否存在该账号
    {
    if(num == L[j].num)
    {
        G = 1;break;
    }
    }
    if (G == 1)
    {
        printf("\t\t\t\t\t 账号登录成功!\n");
        printf("\a");
        printf("请输入密码：");
		H[1] = 1;
        while(k >= 1)
        {
            while(i<6)
            {
                password[i] = getch();
                if(L[j].password[i] != '\b')
                {
                    printf("*");
                }
                else
                {
                    printf("\b \b");
                    i--;i--;//删除错误字符
                }
                if(L[j].password[i] == '\r')
                {
                    printf("\b \b");
                    break;
                }
                i++;
            }
			password[i] = '\0';
			if(strcmp(L[j].password,password) == 0)
             {
                printf("\n密码输入成功！");
                m = 1; k = 0;
				return m;
             }
             else
             {
               k--;i = 0;
			   if( k != 0)
			   {
               printf("\n密码输入失败！您还有%d次登录密码机会\n",k);
			   printf("请输入密码：");
			   }
             }
        }
        return m;
    }
    else
    {

        printf("\n账号输入错误！返回上一级界面\n");
        Sleep(4000);

        return m;
    }

	
}
void change_password() // 修改密码
{
    char s[6],s1[6],s2[6];
    int i = 0;
    printf("请输入旧密码：");
        while(i<6)
        {
                s[i] = getch();
                if(s[i] != '\b')
                {
                    printf("*");
                }
                else
                {
                    printf("\b \b");
                    i--;i--;//删除错误字符
                }
                if(s[i] == '\r')
                {
                    printf("\b \b");
                    break;
                }
                i++;
        }
        s[i] = '\0';
    if(strcmp(s,L[j].password) == 0)
    {
        printf("\n请输入新密码：");
		i = 0;
           while(i<6)
        {
                s1[i] = getch();
                if(s1[i] != '\b')
                {
                    printf("*");
                }
                else
                {
                    printf("\b \b");
                    i--;i--;//删除错误字符
                }
                if(s1[i] == '\r')
                {
                    printf("\b \b");
                    break;
                }
                i++;
        }
        printf("\n请输入新密码：");
		i = 0;
           while(i<6)
        {
                s2[i] = getch();
                if(s2[i] != '\b')
                {
                    printf("*");
                }
                else
                {
                    printf("\b \b");
                    i--;i--;//删除错误字符
                }
                if(s2[i] == '\r')
                {
                    printf("\b \b");
                    break;
                }
                i++;
        }
        if(strcmp(s1,s2) == 0)
        {
            printf("\n修改密码成功！\n");
			strcpy(L[j].password,s1); // 复制字符串
			Sleep(3000);
        }
        else
        {
            printf("\n修改密码失败，返回主界面\n");
			Sleep(3000);
        }

    }
	else
	{
		printf("\n密码输入错误！！！\n");
	}

}

void balance_inquiry()   //查询余额
{
	H[0] = 1; 
	printf("您的余额：%0.2f\n",L[j].money);
	Sleep(5000);
}
void withdrawal() //取款
{
	    int s;
	char ch = '2' ;//判断是否返回上一界面
	H[3] = 1;
    printf("\n请您输入取款金额{只能输入50的倍数}：");
    scanf("%d",&s);
    if(s <= L[j].money)
    {
          L[j].money = L[j].money - s;
    printf("\n您成功取款%d元\n",s);

	L[j].last_payee = s;

	Sleep(5000);
    }
    else
    {
        printf("\n您的余额不足\n");
        printf("正在返回上一界面!\n");
        Sleep(3000);
    }
	
    

}
void deposit() //存款
{
  int s;
  H[2] = 1;
    printf("\n请您输入存款金额{只能输入50的倍数}：");
    scanf("%d",&s);
    L[j].money = L[j].money + s;
    printf("您成功存入%d元\n",s);
	L[j].last_deposit = s;
	printf("\n当前余额为%d:  ",L[j].money);
    printf("\n返回上一界面中请等待！\n");
	  Sleep(3000);
	
}
void transfer_accounts() //转账
{
    long int sum;
    char ch = '2' ;            //判断是否返回上一界面
    int s,n = 0,b = 1,i;       //b是否继续输入转账卡号，n判断转账成功否，s转账金额
	system("color B");
	H[4] = 1;
    printf("请您输入需要转账的卡号: ");
    scanf("%ld",&sum);
	
    for(i=0;i<3;i++)
    {
        if(L[i].num == sum)
        {
            b = 0;
            n = 1;break;
        }
    }
    while(b == 1)
    {


        printf("卡号输入有误，请重新输入\n");
        printf("返回上一级界面请按（*）键,重新输入转账账号请按(#):  ");
		getchar();
		scanf("%c",&ch);
        if (ch == '*')
        {
            b = 0;
            break;
        }
        printf("请您输入需要转账的卡号: ");
    scanf("%ld",&sum);
    for(i=0;i<3;i++)
    {
        if(L[i].num == sum)
        {
            b = 0;
            n = 1;break;
        }
    }

    }
      if(n == 1)
       {
		  printf("请您输入要转的金额\n");
		  scanf("%d",&s);
         L[j].money = L[j].money - s;
         L[i].money = L[i].money + s;
         printf("\a");
         printf("恭喜您成功转账%d元！",s);
       }
	  printf("\n返回上一界面中请等待！\n");
	  Sleep(3000);

}
void wirte_file() //重新将信息写入文件
{
FILE *fp;
   
    int i;

    fp = fopen("C:\\Users\\aming\\Desktop\\123.txt","w");
    for(i=0;i<N;i++)
    {
        fprintf(fp,"%ld\t%s\t%0.2f\t",L[i].num,L[i].password,L[i].money);
        
        fprintf(fp,"%ld\t%d\t%d\t%d\t%d\t",L[i].year,L[i].month,L[i].day,L[i].deposit,L[i].payee);
	  	fscanf(fp,"%0.2f\t",L[j].transfer_accounts);

		fscanf(fp,"%d\t%d\t%d\t%d\t%d\t",L[j].H[0],L[j].H[1],L[j].H[2],L[j].H[3],L[j].H[4]);
	
      
        fprintf(fp,"\n");
    }
    fclose(fp);
}
void search_log()
{
	int d = 1;
	printf("\n上次登录时间：%d年%d月%d日",L[j].year,L[j].month,L[j].day);
	
	if(L[j].H[3] == 1)
	{
		printf("\n取款金额为%d：",L[j].last_payee);d = 0;
	}
	else if(L[j].H[2] == 1)
	{
		printf("\n存款金额为%d：",L[j].last_deposit);d = 0;
	}
	else if(L[j].H[0] == 1)
	{
		printf("\n查询余额为%d",L[j].money);d = 0;
	}
	else if(L[j].H[4] == 1)
	{
		printf("\n您上次转账金额为:%d",L[j].transfer_accounts);d = 0;
	}
	else if(L[j].H[1] == 1)
	{
		printf("\t\t\t***上次您曾修改过密码***\n");d = 0;
	}
	
	if(d == 1)
	{
		printf("\n您是新用户，您还没有上次登陆经历！\n");
	}
	
	Sleep(5000);
}
void record()
{
	


	printf("请您输入时间：（例如：1998.3.24）");
	scanf("%ld.%d.%d",&L[j].year,&L[j].money,&L[j].day);
	printf("谢谢您的配合！\n");
}
void main()
{
    int i;
    int k,m = 0;
    open_file();
    while( m == 0)
    {
           Welcome_system();

           m = login_system();
    }
	if(m == 1)
	{
		 printf("\n\t\t\t\t\t 恭喜您登录成功\n");
	}
    while( m == 1)
    {
        system("cls");
      
        printf("\t\t\t\t\t  *主菜单*\n");

		printf("\t\t\t  温馨提醒：请您在退卡时按下（7）功能，输入时间\n");

        printf("\n1.密码修改\n2.查询余额\n3.取款\n4.存款\n5.转帐\n6.查看上次登录信息\n7.记录日志\n0.退出银行卡\n");

        scanf("%d",&k);
        switch( k )
        {
            case 1:change_password();break;
            case 2:balance_inquiry();break;
			case 3:withdrawal();break;
			case 4: deposit();break;
			case 5:transfer_accounts();break;
			case 6:search_log();break;
			case 7:record();break;
			case 0:wirte_file();exit(0);break;
        }
    }
	


}
